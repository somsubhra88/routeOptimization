devtools::install_github("rstudio/addinexamples", type = "source")
devtools::install_github("rstudio/addinexamples", type = "source")
install.packages(devtools)
install.packages('devtools')
devtools::install_github("rstudio/addinexamples", type = "source")
install.packages('rCharts')
install.packages('Highcharts')
require(devtools)
install_github('rCharts', 'ramnathv')
install.packages('plyr')
install.packages('yaml')
install.packages("plyr")
install.packages("plyr")
install.packages('plyr', repo='http://nbcgib.uesc.br/mirrors/cran/')
require(devtools)
install_github('rCharts', 'ramnathv')
install.packages('RCurl', repo='http://nbcgib.uesc.br/mirrors/cran/')
install.packages('RCJSONIO', repo='http://nbcgib.uesc.br/mirrors/cran/')
install.packages('RJSONIO', repo='http://nbcgib.uesc.br/mirrors/cran/')
install.packages('whisker', repo='http://nbcgib.uesc.br/mirrors/cran/')
install.packages('yaml', repo='http://nbcgib.uesc.br/mirrors/cran/')
install_github('rCharts', 'ramnathv')
library(rCharts)
a = hPlot(Pulse ~ Height,data = MASS::survey,size="Age",group="Exer",type="bubble",tittle="Bubble Charts")
plot(a)
a$print()
a$print("sakjd")
a$print("test")
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
print(a$print("Check"))
source('~/.active-rstudio-document')
getwd()
X_1 = matrix(c(0,1,0,0, 0,0,0,1, 1,0,0,0),nr=4)
X_1
X_1 = matrix(c(0,1,0,0, 0,0,0,1, 0,0,0,0, 1,0,0,0),nr=4,byrow = TRUE)
X_1
X_1 = matrix(c(0,0,1,0, 0,0,0,0, 1,0,0,0, 0,0,0,0),nr=4,byrow = TRUE)
X_1 = matrix(c(0,1,0,0, 0,0,0,1, 0,0,0,0, 1,0,0,0),nr=4,byrow = TRUE)
X_1
X_2 = matrix(c(0,0,1,0, 0,0,0,0, 1,0,0,0, 0,0,0,0),nr=4,byrow = TRUE)
X_2
X_1 %*% t(X_1)
X_1 %*% X_1
X_1 = matrix(c(0,1,0,0 0,0,0,1, 0,0,0,0, 1,0,0,0), nr =4)
X_1 = matrix(c(0,1,0,0, 0,0,0,1, 0,0,0,0, 1,0,0,0), nr =4)
X_1
X_2 = matrix(c(0,0,1,0, 0,0,0,0, 0,0,1,0, 0,0,0,0), nr =4)
X_2
X_2 = matrix(c(0,0,1,0, 0,0,0,0, 1,0,0,0, 0,0,0,0), nr =4)
X_2
X_1
X_1^2
X_1 %*% X_1
X_1 %*% X_1
X_1
X_1 %*% X_1 %*% X_1
X_2 %*% X_2
X_1 %*% X_1 %*% X_1 %*% X_1
rand(100)
faces = sample(1:6,10000,repace = TRUE)
faces = sample(1:6,10000,replace = TRUE)
10%%2
sampleSize = 10000
faces = sample(1:6,sampleSize,replace = TRUE)
Wins_A = 0
Wins_B = 0
for(i in 3:sampleSize)
{
if(sum(faces[c(i,i-2)]) == 7)
{
if(i %% 2)
Wins_B = Wins_B + 1
else
Wins_A = Wins_A + 1
}
}
Wins_B
Wins_A
N = 40
intString = 1:N
while(length(intString) > 1)
{
pair = sample(intString,1)
newMem = intString[pair] + intString[pair + 1]
intString[pair] = newMem
intString[-(pair + 1)]
}
N = 40
intString = 1:N
while(length(intString) > 1)
{
length(intString)
pair = sample(intString,1)
newMem = intString[pair] + intString[pair + 1]
intString[pair] = newMem
intString[-(pair + 1)]
}
source('~/.active-rstudio-document')
1:N
N = 40
intString = 1:N
print(length(intString))
pair = sample(intString,1)
pair
sample(intString,1)
sample(intString,1)
pair = sample(intString,1)
source('~/.active-rstudio-document')
N = 40
intString = 1:N
print(length(intString))
1:(length(intString)-1)
sample(1:(length(intString)-1),1)
pair = sample(1:(length(intString)-1),1)
newMem = intString[pair] + intString[pair + 1]
newMem
pair
intString[pair] = newMem
intString[pair]
intString[-(pair + 1)]
source('~/.active-rstudio-document')
intString
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
?grep
grep("ami","ami ekti gadha")
grep("ekti","ami ekti gadha")
grep("goru","ami ekti gadha")
a = rep(NA,5)
is.na(a)
all(is.na(a))
source('C:/Users/somsubhra.g/PycharmProjects/routeOptimization/comparison/comparison_R_Code_step2.R')
library('httr')
library('curl')
library('dplyr')
??GET
?httr::GET
source('C:/Users/somsubhra.g/PycharmProjects/routeOptimization/comparison/comparison_R_Code_step2.R')
write.csv(latLngData,"Comparison Data_final.csv", row.names = FALSE)
